// Prisma schema for your app
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * --------------------------
 * ENUMS
 * ---------------------------
 */

enum Role {
  SUPER_ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
  DELETED
}

enum AppVersionTags {
  BETA
  STABLE
  BUGFIX
  PATCH
}

/**
 * --------------------------
 * MODELS
 * ---------------------------
 */

model User {
  id       String  @id @default(uuid())
  role     Role    @default(USER)
  clerkId  String  @unique // corrected from clarkId
  email    String  @unique
  imageUrl String?
  hasImage Boolean @default(false)
  name     String
  status   Status  @default(ACTIVE)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Relations
  createdVerses BibleVerse[]

  @@unique([clerkId, email])
  @@index([id])
  @@index([name])
  @@index([role])
}

/**
 * --- App Version Control ---
 */

model AppVersion {
  id                  String           @id @default(uuid()) @db.Uuid
  version             String
  title               String
  description         String[] // array of description lines
  mandatory           Boolean          @default(false)
  platforms           String[]
  releaseNotesUrl     String?
  releaseDate         DateTime
  minSupportedVersion String?
  author              String?
  tags                AppVersionTags[] @default([STABLE])
  additionalInfo      Json?
  status              Status           @default(ACTIVE)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  // Relations
  users AppUser[]

  // @@unique([version, platforms])
  @@index([version])
}

/**
 * --- Userâ€™s Installed App Versions ---
 */

model AppUser {
  id         String     @id @default(uuid())
  deviceId   String     @unique
  versionId  String     @db.Uuid
  email      String?
  isDownload Boolean    @default(false)
  // Relations
  version    AppVersion @relation(fields: [versionId], references: [id], onDelete: Cascade)

  lastUsedAt DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([deviceId])
}

model DownloadUsers {
  id           String   @id @default(uuid())
  email        String
  appVersionId String
  downloadedAt DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([appVersionId, email])
  @@index([appVersionId])
  @@index([email])
}

/**
 * --- Bible Verses ---
 */
model BibleVerse {
  id      String  @id @default(uuid())
  quote   String // corrected spelling
  verse   String // e.g. "John 3:16"
  addedBy String?

  // Relations
  addedByUser User? @relation(fields: [addedBy], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([verse])
  @@index([addedBy])
}
